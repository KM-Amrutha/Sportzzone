
<%- include('../layouts/userHeader.ejs') -%>

<style>
    #removeCouponBtn:hover {
        background-color: rgb(12, 154, 12);
        transition: background-color 0.3s;
    }
</style>
    

    <main class="main">
        <div class="paordder-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>


        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 mb-sm-15">
                        <div class="panel-collapse collapse login_form" id="loginform">
                            <div class="panel-body">


                                <p class="mb-30 font-sm">If you have shopped with us before, please enter your details below.
                                     If you are a new customer, please proceed to the Billing &amp; Shipping section.</p>
                                <form method="post">
                                    <div class="form-group">
                                        <input type="text" name="email" placeholder="Username Or Email">
                                    </div>
                                    <div class="form-group">
                                        <input type="password" name="password" placeholder="Password">
                                    </div>
                                    <div class="login_footer form-group">
                                        <div class="chek-form">
                                            <div class="custome-checkbox">
                                                <input class="form-check-input" type="checkbox" name="checkbox" id="remember" value="">
                                                <label class="form-check-label" for="remember"><span>Remember me</span></label>
                                            </div>
                                        </div>
                                        <a href="#">Forgot password?</a>
                                    </div>
                                    <div class="form-group">
                                        <button class="btn btn-md" name="login">Log in</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="panel-body">
                        <p class="mb-30 font-sm bold-text">If you have a coupon code, please apply it below.</p>
                    
                        <div class="form-group">
                            <div class="input-group">
                                <!-- Dropdown for selecting a coupon -->
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-success dropdown-toggle apply-btn btn-custom" type="button" id="couponDropdown"
                                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Select Coupon
                                    </button>
                                    <div class="dropdown-menu" aria-labelledby="couponDropdown" id="couponDropdownMenu">
                                        <% if (availableCoupons && availableCoupons.length > 0) { %>
                                            <% availableCoupons.forEach(coupon => { %>
                                                <% if (grandTotal >= coupon.minimumPurchase) { %>
                                                    <a class="dropdown-item" href="#" onclick="selectCoupon('<%= coupon.couponCode %>')">
                                                        <%= coupon.couponName %> Rs.<%= + +coupon.discountAmount %> Off (Min Purchase: Rs.<%=+ + coupon.minimumPurchase %>)
                                                    </a>
                                                <% } %>
                                            <% }) %>
                                        <% } else { %>
                                            <span class="dropdown-item">No available coupons</span>
                                        <% } %>
                                    </div>
                                </div>
                    
                                <!-- Input field for entering the coupon code -->
                                <input type="text" class="form-control coupon-input custom-input" placeholder="Enter Coupon Code..." id="couponCode">
                    
                                <!-- Button for applying the coupon -->
                                <div class="input-group-append">
                                    <button class="btn btn-success apply-btn btn-custom" id="applyCouponBtn" onclick="applyCoupon()">Apply Coupon</button>
                                </div>
                            </div>
                        </div>
                        <div id="couponNamePlaceholder"></div>
                    </div>
                    
                    
                    </div>     
                </div>


                <!-- <div class="row">
                    <div class="col-12">
                        <div class="divider mt-50 mb-50"></div>
                    </div>
                </div> -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-25">
                            <h4>Billing Details</h4>
                        </div>
                            <% if (addresses && addresses.length > 0) { %>
                                <% addresses.forEach((address, index) => { %>
                                    <hr>
                                    <div class="address-container" id="address_<%= address._id %>">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="selectedAddress"
                                                   id="address_radio_<%= address._id %>" value="<%= address._id %>"
                                                   <%= index === 0 ? 'checked' : '' %>
                                            >
                                            <label class="form-check-label" for="address_radio_<%= address._id %>">
                                                <address>
                                                    Name: <%= address.name %> <br>
                                                    Housename: <%= address.houseName %> <br>
                                                    City: <%= address.city %>, <br>
                                                    State: <%= address.state %>. <br>
                                                    Pincode: <%= address.pincode %>
                                                </address>
                                               
                                            </label>
                                        </div>
                                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 10px;">
                                            <!-- Edit Address link -->
                                            <a href="/loadEditAddress?id=<%= address._id %>" 
                                                style="background-color: rgb(3, 147, 48); border: none; color: white; padding: 10px 15px; cursor: pointer; font-size: 16px; border-radius: 5px; text-decoration: none; display: inline-block;">
                                                 <i class="fa-solid fa-pen"></i> Edit Address
                                             </a>
                            
                                            <!-- Remove Address button -->
                                            <button onclick="removeAddress('<%= address._id %>')" 
                                                    style="background-color: rgb(202, 4, 4); border: none; color: white; padding: 10px 15px; cursor: pointer; font-size: 16px; border-radius: 5px;">
                                                <i class="fa-solid fa-trash"></i> Remove Address
                                            </button>
                                        </div>
                                    </div>
                                    <hr>
                                <% }); %>
                                <% if (addresses.length < 3) { %>
                                    <div class="address-container">
                                        <input type="button" value="Add Address" onclick="toggleAddressForm()" class="btn-custom apply-btn add-address">
                                    </div>
                                <% } %>
                            <% } else { %>
                                <p>No address found.</p>
                                <div class="address-container">
                                    <input type="button" value="Add Address" onclick="toggleAddressForm()" class="btn-custom apply-btn add-address">
                                </div>
                            <% } %>
                    
                            <div class="col-lg-12" id="addressFormContainer" style="display: none;">
                                <div class="card mb-3 mb-lg-0">
                                    <div class="card-header">
                                        <h5 class="mb-0">Add New Address</h5>
                                    </div>
                                    <div class="card-body">
                                        
                                        <form id="addressForm" action="/addAddress" method="post">
                                            <div class="form-group mb-3">
                                                <label for="inputName" class="form-label">Name</label>
                                                <input type="text" class="form-control form-control-lg p-3" name="name" id="inputName" placeholder="Enter your full name">
                                                <div id="nameError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label for="inputMobile" class="form-label">Mobile</label>
                                                <input type="text" class="form-control form-control-lg p-3" name="mobile" id="inputMobile" placeholder="Enter your mobile number" pattern="[0-9]{10}">
                                                <div id="mobileError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label for="inputHouseName" class="form-label">House Name</label>
                                                <input type="text" class="form-control form-control-lg p-3" name="houseName" id="inputHouseName" placeholder="Enter your house name">
                                                <div id="houseNameError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label for="inputCity" class="form-label">City</label>
                                                <input type="text" class="form-control form-control-lg p-3" name="city" id="inputCity" placeholder="Enter your city">
                                                <div id="cityError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label for="inputState" class="form-label">State</label>
                                                <input type="text" class="form-control form-control-lg p-3" name="state" id="inputState" placeholder="Enter your state">
                                                <div id="stateError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mb-3">
                                                <label for="inputZip" class="form-label">Pin Code</label>
                                                <input type="number" class="form-control form-control-lg p-3" name="pincode" id="inputZip" placeholder="Enter your pin code">
                                                <div id="pinCodeError" class="text-danger"></div>
                                            </div>
                                            <div class="form-group mt-4">
                                                <button type="submit" class="btn btn-fill-out btn-block btn-lg font-weight-bold">Save Address</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <!-- </form> -->
                    </div>

                    <div class="col-md-6">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>

                       
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th> <!-- Keep only the Total column -->
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% let total = 0; %>
                                        <% if (cartData && cartData.product.length > 0) { %>
                                            <% cartData.product.forEach(item => { %>
                                                <tr>
                                                    <td class="image product-thumbnail">
                                                        <img src="/uploads/<%= item.productId.images[0] %>" alt="#">
                                                    </td>
                                                    <td>
                                                        <h5><a href="shop-product-full.html"><%= item.productId.productName %></a></h5>
                                                        <span class="product-qty"> X <%= item.quantity %></span>
                                                    </td>
                                                    <td>
                                                        <% 
                                                            let price = item.productId.offerPrice && item.productId.offerPrice < item.productId.productPrice 
                                                                ? item.productId.offerPrice 
                                                                : item.productId.productPrice;
                                                            let itemTotal = price * item.quantity;
                                                        %>
                                                        Rs. <%= itemTotal.toFixed(2) %>
                                                        <% total += itemTotal; %>
                                                    </td>
                                                </tr>
                                            <% }) %>
                            
                                            <tr>
                                                <th>Coupon Discount</th>
                                                <td colspan="2" class="product-subtotal" id="couponDiscountDisplay">
                                                    <span class="font-xl text-brand fw-900">Rs. <%= couponDiscount.toFixed(2) %></span>
                                                </td>
                                            </tr>
                                            
                                            <!-- Delivery Charge Row -->
                                            <tr>
                                                <th>Delivery Charge</th>
                                                <td colspan="2" class="product-subtotal">
                                                    <span class="font-xl text-brand fw-900">Rs. 50.00</span>
                                                </td>
                                            </tr>
                            
                                            <!-- Grand Total Row -->
                                            <tr>
                                                <th>Grand Total</th>
                                                <td colspan="2" class="product-subtotal">
                                                    <span class="font-xl text-brand fw-900" id="GrandTotal">
                                                        Rs. <%= (total - couponDiscount + 50).toFixed(2) %></span>
                                                </td>
                                            </tr>
                            
                                        <% } else { %>
                                            <tr>
                                                <td class="image product-thumbnail">
                                                    <img src="/uploads/<%= product.productId.images[0] %>" alt="#">
                                                </td>
                                                <td>
                                                    <h5><a href="shop-product-full.html"><%= product.productId.productName %></a></h5>
                                                </td>
                                                <td>Rs. <%= product.productId.productPrice %></td>
                                            </tr>
                                            <tr>
                                                <th>Grand Total</th>
                                                <td colspan="2" class="product-subtotal">
                                                    <span class="font-xl text-brand fw-900" id="GrandTotal">Rs. <%= product.productId.productPrice.toFixed(2) %></span>
                                                </td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                            
                            
                        

                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <div class="payment_method">
                                <div class="mb-25">
                                    <h5>Payment</h5>
                                </div>
                                <div class="payment_option">
                                     <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio"
                                         name="payment_option" value="Razorpay" id="exampleRadios3">
                                        <label class="form-check-label" for="exampleRadios3" 
                                        data-bs-toggle="collapse" data-target="#checkPayment"
                                        aria-controls="checkPayment">Razor pay</label>
                                        <div class="form-group collapse in" id="checkPayment"></div>
                                        </div>

                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" 
                                        name="payment_option" value="Wallet" id="exampleRadios4">
                                        <label class="form-check-label" for="exampleRadios4" 
                                        data-bs-toggle="collapse" data-target="#checkPayment" 
                                        aria-controls="checkPayment"> wallet</label>
                                        <div class="form-group collapse in" id="checkPayment"></div>
                                        </div>

                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" 
                                        name="payment_option"  value="Cash on delivery" id="exampleRadios5">
                                        <label class="form-check-label" for="exampleRadios5"
                                         data-bs-toggle="collapse" data-target="#checkPayment" 
                                         aria-controls="checkPayment">Cash on delivery</label>
                                        <div class="form-group collapse in" id="checkPayment"></div>
                                        </div>
                                        
                                    <p id="codMessage" class="text-danger" style="display: none;">COD is not available for toatal  amount above 1000 Rs!!.</p>

                                </div>
                            </div>
                            <button onclick="placeOrder()" id="placeOrderBtn"  class="btn-custom btn-fill-out apply-btn btn-block mt-30">Place Order</button>
                        </div>
                    </div>


                </div>
            </div>
        </section>
    </main>
    
    <%- include('../layouts/userFooter.ejs') -%>

    <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="text-center">
                    <h5 class="mb-5">Now Loading</h5>
                    <div class="loader">
                        <div class="bar bar1"></div>
                        <div class="bar bar2"></div>
                        <div class="bar bar3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>



    <script>
        function removeAddress(addressId) {
            const addressElement = document.getElementById('address_' + addressId);
            if (addressElement) {
                addressElement.parentNode.removeChild(addressElement);
                console.log('Address removed successfully');
                fetch('/removeAddress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ addressId })
                })
                    .then(response => {
                        if (!response.ok) {
                            console.error('Failed to remove address');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            } else {
                console.error('Address element not found');
            }
        }
    </script>

<script>
    function toggleAddressForm() {
        const formContainer = document.getElementById('addressFormContainer');
        formContainer.style.display = formContainer.style.display === 'none' ? 'block' : 'none';
    }
</script>
<script>
    document.getElementById('addressForm').addEventListener('submit', function (event) {
        event.preventDefault(); 

        const formData = new FormData(this);
        const data = {};
        formData.forEach((value, key) => (data[key] = value));

        fetch('/addAddress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                window.location.href = '/loadCheckout';
            } else {
            
                console.error('Error:', result.message);
                alert(result.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while saving the address.');
        });
    });
</script>





<script>
    // const placeOrderBtn = document.getElementById('placeOrderBtn');
    // placeOrderBtn.addEventListener('click', function (event) {
    //     event.preventDefault();
    //     placeOrder();
    // });

    function placeOrder() {
    const couponCode = document.getElementById('couponCode').value;
    const selectedRadioButton = document.querySelector('input[name="payment_option"]:checked');
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
    const totalAmount = parseFloat(document.getElementById("GrandTotal").innerText.replace('Rs.', ''));

    if (!selectedRadioButton) {
        toastr.info("Please select a Payment Method.");
        return false;
    }

    if (!selectedAddress) {
        toastr.info("Please select an Address.");
        return false;
    }

    const selectedPaymentMethod = selectedRadioButton.value;
    const selectedAddressValue = selectedAddress.value;

    if (totalAmount > 1000 && selectedPaymentMethod === "Cash on delivery") {
        document.getElementById('codMessage').style.display = 'block';
        return false; 
    } else {
        document.getElementById('codMessage').style.display = 'none';
    }

    const orderData = {
        paymentMethod: selectedPaymentMethod,
        paymentStatus: "Pending",
        amount: totalAmount,
        address: selectedAddressValue,
        couponCode: couponCode
    };

    let url = '';

    if (selectedPaymentMethod === 'Razorpay') {
        url = '/onlinepay';  
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData),
        })
        .then(response => response.json())
        .then(data => {
            if (data.razorpayOrder) {
                const options = {
                    "key": '<%= process.env.RAZORPAY_ID_KEY %>', 
                    "amount": data.razorpayOrder.amount, 
                    "currency": "INR",
                    "name": "Sports Zone",
                    "description": "Order Payment",
                    "order_id": data.razorpayOrder.id, 
                    "handler": function (response) {
                    
                        fetch('/verifyPayment', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({
        // razorpayOrderId: data.razorpayOrder.id, // This is the Razorpay order ID
        amount: totalAmount //
    })
})
.then(response => response.json())
.then(data => {
    if (data.message === 'Payment verified and order updated successfully') {
        Swal.fire({
            position: "center",
            icon: "success",
            title: "Payment successful!",
            showConfirmButton: false,
            timer: 2000
        }).then(() => {
            window.location.href = `/loadOrderPage?id=${data.order._id}`;
        });
    } else {
        Swal.fire({
            icon: "error",
            title: "Payment verification failed",
            text: data.message
        });
    }
})
.catch(error => {
    Swal.fire({
        icon: "error",
        title: "Error",
        text: "Something went wrong during payment verification."
    });
});

                    },
                    "theme": {
                        "color": "#90EE90"
                    }
                };
                const rzp = new Razorpay(options);
                rzp.open();
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Unable to create Razorpay order."
                });
            }
        })
        .catch(error => {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "Something went wrong while processing the payment."
            });
        });
    } else {
        // Handle non-Razorpay payments (like cash on delivery, wallet, etc.)
        url = '/placeOrder';
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData),
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === "Insufficient wallet balance") {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Insufficient wallet balance!"
                });
            } else if (data.message === "Order Placed Successfully") {
                Swal.fire({
                    position: "center",
                    icon: "success",
                    title: "Order Placed",
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    window.location.href = `/loadOrderPage?id=${data.order._id}`;
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: "Unable to place the order."
                });
            }
        })
        .catch(error => {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "Something went wrong while placing the order."
            });
        });
    }
}

</script>
   

    </script>

    <script>
        function removeFromCart() {
                fetch('/clearCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({}),
                })
                    .then(response => {
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                }
    </script>


    

<script>
     function selectCoupon(couponCode) {
        document.getElementById('couponCode').value = couponCode; 
    }
</script>

<script>
  async function loadAvailableCoupons(grandTotal) {
    try {
        const response = await fetch('/selectCoupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ grandTotal: grandTotal }) // Pass grandTotal
        });

        console.log('Response status:', response.status); // Check if request is successful

        if (!response.ok) {
            throw new Error('Failed to fetch coupons.');
        }

        const data = await response.json();
        console.log('Fetched coupons:', data); // Log fetched coupons

        const couponDropdownMenu = document.getElementById('couponDropdownMenu');

        // Clear existing dropdown items
        couponDropdownMenu.innerHTML = '';

        // Check if there are any coupons and populate dropdown
        if (data.coupons && data.coupons.length > 0) {
            data.coupons.forEach(coupon => {
                const couponItem = document.createElement('a');
                couponItem.className = 'dropdown-item';
                couponItem.href = '#'; // Prevent default action
                couponItem.innerText = `${coupon.couponName} - ${coupon.discountAmount} off`;
                couponItem.onclick = () => selectCoupon(coupon.couponCode); // Set coupon code on click
                couponDropdownMenu.appendChild(couponItem);
            });
        } else {
            // If no valid coupons, show a message
            const noCouponsItem = document.createElement('a');
            noCouponsItem.className = 'dropdown-item';
            noCouponsItem.href = '#'; 
            noCouponsItem.innerText = 'No coupons available';
            couponDropdownMenu.appendChild(noCouponsItem);
        }
    } catch (error) {
        console.error('Error loading coupons:', error);
    }
}

// Call the function and pass the grand total as needed
document.addEventListener('DOMContentLoaded', function() {
    const grandTotal = 1000; // Replace with actual grand total calculation
    loadAvailableCoupons(grandTotal); // Load coupons when the document is ready
});

</script>



    <script>
//     async function applyCoupon() {
//     const couponCode = document.getElementById('couponCode').value;
//     const grandTotalElement = document.getElementById('GrandTotal');
//     const selectedAmountText = grandTotalElement.innerText;
//     const selectedAmount = parseFloat(selectedAmountText.replace('Rs.', '').trim());

//     try {
//         const response = await fetch('/applyCoupon', {
//             method: 'POST',
//             headers: {
//                 'Content-Type': 'application/json'
//             },
//             body: JSON.stringify({ couponCode, selectedAmount })
//         });

//         const data = await response.json();
//         if (!response.ok || !data.success) {
//             toastr.error(data.message);
//             return;
//         }

//         const discountAmount = parseFloat(data.discountAmount);
//         if (isNaN(discountAmount)) {
//             toastr.error('Invalid discount amount.');
//             return;
//         }

//         // Calculate the new discounted total only once
//         const discountedTotal = selectedAmount - discountAmount;
//         if (discountedTotal < 0) {
//             toastr.error('Discounted total is invalid.');
//             return;
//         }

//         // Update the Grand Total in the UI
//         grandTotalElement.innerText = `Rs. ${discountedTotal.toFixed(2)}`;

//         // Show the coupon name and allow removing the coupon
//         document.getElementById('couponNamePlaceholder').innerHTML = `
//             <span style="color: green;">Coupon Applied: ${data.couponName}</span>
//             <button id="removeCouponBtn" style="background: none; border: none; cursor: pointer; color: green; font-size: 14px;">
//                 <i class="fas fa-times"></i> Remove Coupon
//             </button>
//         `;

//         // Disable the Apply Coupon button after applying the coupon
//         document.getElementById('applyCouponBtn').disabled = true;
//         document.getElementById('couponCode').disabled = true;

//         // Add event listener for removing the coupon
//         document.getElementById('removeCouponBtn').addEventListener('click', async function () {
//             await fetch('/removeCoupon', {
//                 method: 'POST',
//                 headers: { 'Content-Type': 'application/json' },
//                 body: JSON.stringify({ couponCode })
//             });
//             location.reload(); // Reload the page to reset the coupon
//         });

//         toastr.success(data.message);
//     } catch (error) {
//         console.error('Error applying coupon:', error);
//     }
// }

async function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value;
    const grandTotalElement = document.getElementById('GrandTotal');
    const selectedAmountText = grandTotalElement.innerText;
    const selectedAmount = parseFloat(selectedAmountText.replace('Rs.', '').trim());
    
    try {
        const response = await fetch('/applyCoupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode, selectedAmount })
        });
        const data = await response.json();

        if (!response.ok || !data.success) {
            toastr.error(data.message);
            return;
        }

        const discountAmount = parseFloat(data.discountAmount);
        if (isNaN(discountAmount)) {
            toastr.error('Invalid discount amount.');
            return;
        }

        
        const discountedTotal = selectedAmount - discountAmount;
        grandTotalElement.innerText = `Rs. ${discountedTotal.toFixed(2)}`;

    
        const couponDiscountDisplay = document.getElementById('couponDiscountDisplay');
        if (couponDiscountDisplay) {
            couponDiscountDisplay.innerHTML = `
                <span class="font-xl text-brand fw-900" style="color: green;">Rs. ${discountAmount.toFixed(2)}</span>
            `;
        }

        // Show the coupon applied message
        document.getElementById('couponNamePlaceholder').innerHTML = `
            <span style="color: green;">Coupon Applied: ${data.couponName}</span>
            <button id="removeCouponBtn" style="background: none; border: none; cursor: pointer; color: green; font-size: 14px;">
                <i class="fas fa-times"></i> Remove Coupon
            </button>
        `;

        // Disable the Apply Coupon button and input field after applying the coupon
        document.getElementById('applyCouponBtn').disabled = true;
        document.getElementById('couponCode').disabled = true;

        // Add event listener for removing the coupon
        document.getElementById('removeCouponBtn').addEventListener('click', async function () {
            await fetch('/removeCoupon', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ couponCode })
            });
            location.reload(); // Reload the page to reset the coupon
        });

        toastr.success(data.message);
    } catch (error) {
        console.error('Error applying coupon:', error);
    }
}

</script>



    <!-- Vendor JS-->
    <script src="assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="assets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="assets/js/plugins/slick.js"></script>
    <script src="assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="assets/js/plugins/wow.js"></script>
    <script src="assets/js/plugins/jquery-ui.js"></script>
    <script src="assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="assets/js/plugins/magnific-popup.js"></script>
    <script src="assets/js/plugins/select2.min.js"></script>
    <script src="assets/js/plugins/waypoints.js"></script>
    <script src="assets/js/plugins/counterup.js"></script>
    <script src="assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="assets/js/plugins/images-loaded.js"></script>
    <script src="assets/js/plugins/isotope.js"></script>
    <script src="assets/js/plugins/scrollup.js"></script>
    <script src="assets/js/plugins/jquery.vticker-min.js"></script>
    <!-- Template  JS -->
    <script src="assets/js/maind134.js?v=3.4"></script>
    <script src="assets/js/shopd134.js?v=3.4"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-frontend/shop-checkout.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jul 2023 10:10:07 GMT -->
</html>


