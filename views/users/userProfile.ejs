<%- include('../layouts/userHeader.ejs') -%>
    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="./home" rel="nofollow">Home</a>
                    <span></span> Pages
                    <span></span> Account
                </div>
            </div>
        </div>

        <section class="pt-150 pb-150">
            <div class="container">
                
                    <!-- <div class="col-lg-10 m-auto"> -->
                        <div class="row">
                            <div class="col-md-4">
                                <div class="dashboard-menu">
                                    <ul class="nav flex-column" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" 
                                            aria-controls="dashboard" aria-selected="false">
                                                <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" 
                                            role="tab" aria-controls="address" aria-selected="true">
                                                <i class="fi-rs-marker mr-10"></i>My Address
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders"
                                             role="tab" aria-controls="orders" aria-selected="true">
                                                <i class="fi-rs-shopping-bag mr-10"></i>Orders
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="wallet-tab" data-bs-toggle="tab" href="#wallet"
                                             role="tab" aria-controls="wallet" aria-selected="true">
                                                <i class="fa-solid fa-wallet mr-10"></i>Wallet
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="account-detail-tab" data-bs-toggle="tab" href="#changePassword"
                                             role="tab" aria-controls="account-detail" aria-selected="true">
                                                <i class="fi-rs-user mr-10"></i>Change Password
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <% if(locals.user) { %>
                                            <a class="nav-link" href="/logout"><i class="fi-rs-sign-out mr-10"></i>Logout</a>
                                            <% } %>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="col-md-8">
                                <div class="tab-content dashboard-content">
                                    <div class="tab-pane fade active show" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                                        <div class="card" style="width: 90%;">
                                            <div class="card-header d-flex justify-content-between">
                                                <% if(locals.user) { %>
                                                <h5 class="mb-0">Hello, <%= user.name %></h5>
                                                  <div class="ms-auto">
                                               <button id="editProfileButton" class="btn-custom btn-sm apply-btn btn-outline-primary">Edit Profile</button>
                                                   </div>
                                            </div>
                                            <div class="profile-info">
                                                <p><i class="fas fa-envelope"></i> <%= user.email %></p>
                                                <p><i class="fas fa-phone"></i> <%= user.mobile %></p>
                                                <% } %>
                                            </div>
                                            
                                            
                                            <div class="card-body">
                                                <p>From your account dashboard, you can easily check & view your <a href="#">recent orders</a>, manage your <a href="#">shipping and billing addresses</a>, and <a href="#">edit your password and account details</a>.</p>
                                            </div>

                                            <!-- Edit Profile Form -->
        
                                            <form id="editProfileForm" class="p-3" style="display: none;">
                                             <div class="form-group">
                                            <label for="editName">Edit Name</label>
                                            <input type="text" class="form-control" id="editName" placeholder="Enter new name" value="<%= user.name %>">
                                            <span id="nameError" class="error-message"></span>
                                            </div>
                                             <div class="form-group">
                                            <label for="editEmail">Edit Email</label>
                                            <input type="email" class="form-control" id="editEmail" placeholder="Enter new email" value="<%= user.email %>">
                                            <span id="emailError" class="error-message"></span>
                                            </div>
                                            <div class="form-group">
                                            <label for="editMobile">Edit Mobile</label>
                                            <input type="text" class="form-control" id="editMobile" placeholder="Enter new mobile number" value="<%= user.mobile %>">
                                            <span id="mobileError" class="error-message"></span>
                                            </div>
                                            <button type="submit" class="btn btn-primary mt-3">Save</button>
                                         
                                                 </form>
                                        </div>
                                    </div>
    


                                    <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5 class="mb-0">Your Orders</h5>
                                            </div>

                                            <div class="card-body">
                                                <div class="table-responsive">
                                                    <table class="table table-striped table-hover"
                                                    style="margin: 0;">

                                                        
                                                            <% if(order && order.length> 0 ){ %>
                                                                <thead class="table-dark">
                                                            <tr>
                                                                <th style="padding: 10px;">Order Id</th>
                                                                <th style="padding: 10px;">Date</th>
                                                                <th style="padding: 10px;"> Order Status</th>
                                                                <th style="padding: 10px;">Payment Status</th>
                                                                <th style="padding: 10px;">Total</th>
                                                                <th style="padding: 10px;">View</th>
                                                            </tr>
                                                        </thead>

                                                        <tbody id="orders-tbody">
                                                            <% order.forEach(orders=> { %>
                                                            <tr>
                                                                <td style="padding: 10px;">
                                                                    <%= orders.orderId %>
                                                                </td>
                                                                <td style="padding: 10px;">
                                                            
                                                                    <%= new Date(orders.orderDate).toLocaleString('en-IN',
                                                                     { timeZone: 'Asia/Kolkata', year: 'numeric', month: '2-digit', day: '2-digit', 
                                                                     hour: '2-digit', minute: '2-digit', second: '2-digit' }) %>
                                                                </td>


                                                                <td style="padding: 10px;">
                                                                    <% if (orders.orderStatus === 'Cancelled' && orders.paymentStatus !== 'Failed') { %>
                                                                        <span class="badge bg-danger">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } else if (orders.orderStatus === 'Order Placed') { %>
                                                                        <span class="badge bg-primary">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } else if (orders.orderStatus === 'Confirmed') { %>
                                                                        <span class="badge bg-warning">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } else if (orders.orderStatus === 'Shipped') { %>
                                                                        <span class="badge bg-info">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } else if (orders.orderStatus === 'Delivered') { %>
                                                                        <span class="badge bg-success">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } else if (orders.orderStatus === 'Returned') { %> <!-- Corrected this line -->
                                                                        <span class="badge bg-secondary">
                                                                            <%= orders.orderStatus %>
                                                                        </span>
                                                                    <% } %>
                                                                </td>

                                                                    <td style="padding: 10px;">
                                                                        <span class="badge <%= orders.paymentStatus === 'Received' ? 'bg-success text-dark' : (orders.paymentStatus === 'Failed' ? 'bg-danger text-light' : 'bg-warning text-dark') %>">
                                                                        
                                                                             %>
                                                                            <%= orders.paymentStatus %>
                                                                        </span>
                                                                        
                                                                        </td>



                                                                        <td style="padding: 10px;">
                                                                            <%= orders.totalAmount %>
                                                                            </td>
                                                                            <td style="padding: 10px;">
                                                                                    <% if (orders.paymentStatus === 'Pending' && orders.paymentMethod === 'Razorpay') { %>
                                                                                        <p class="text-danger cursor-pointer" onclick="retryPayement('<%= orders.orderId %>')">Pay</p>

                                                                                        <% } else { %>
                                                                                            <a href="/orderDetailPage?id=<%= orders._id %>">View Order</a>
                                                                                         
                                                                                    <% } %>
                                                                                
                                                                                </td>
                                                                            <% })%>
                                                            </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                    
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                   
                                    <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="card mb-3 mb-lg-0">
                                                    <div class="card-header">
                                                        <h5 class="mb-0">My Address</h5>
                                                    </div>
                                                    <div class="card-body">
                                                        <% if (addresses && addresses.length > 0) { %>
                                                            <% addresses.forEach((address) => { %>
                                                                <div id="address_<%= address._id %>">
                                                                    <address>
                                                                        Name: <%= address.name %><br>
                                                                        Mobile: <%= address.mobile %><br>
                                                                        House Name: <%= address.houseName %><br>
                                                                        City: <%= address.city %>,<br>
                                                                        State: <%= address.state %>.<br>
                                                                        Pincode: <%= address.pincode %>
                                                                    </address>
                                                                   
                                                                    <a onclick="removeAddress('<%= address._id %>')" class="btn-custom btn-sm btn-danger">
                                                                         Delete
                                                                    </a>
                                                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <a href="/loadEditAddress?id=<%= address._id %>" class="btn-custom btn-sm btn-primary">
                                                                        Edit
                                                                    </a>
                                                                    <hr>
                                                                </div>
                                                            <% }); %>
                                                        <% } else { %>
                                                            <p>No address found.</p>
                                                        <% } %>
                                                        <a href="#" class="btn-custom btn-sm" id="toggleAddressForm">Add Address</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    
    
                                        <div class="col-lg-12" id="addressFormContainer" style="display: none;">
                                            <div class="card mb-3 mb-lg-0">
                                                <div class="card-header">
                                                    <h5 class="mb-0">Add New Address</h5>
                                                </div>
                                                <div class="card-body">
                                                    <form id="addressForm" action="/addAddress" method="post">
                                                        <div class="form-group mb-3">
                                                            <label for="inputName" class="form-label">Name</label>
                                                            <input type="text" class="form-control form-control-lg p-3" name="name" id="inputName" placeholder="Enter your full name">
                                                            <div id="nameError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mb-3">
                                                            <label for="inputMobile" class="form-label">Mobile</label>
                                                            <input type="text" class="form-control form-control-lg p-3" name="mobile" id="inputMobile" placeholder="Enter your mobile number" pattern="[0-9]{10}">
                                                            <div id="mobileError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mb-3">
                                                            <label for="inputHouseName" class="form-label">House Name</label>
                                                            <input type="text" class="form-control form-control-lg p-3" name="houseName" id="inputHouseName" placeholder="Enter your house name">
                                                            <div id="houseNameError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mb-3">
                                                            <label for="inputCity" class="form-label">City</label>
                                                            <input type="text" class="form-control form-control-lg p-3" name="city" id="inputCity" placeholder="Enter your city">
                                                            <div id="cityError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mb-3">
                                                            <label for="inputState" class="form-label">State</label>
                                                            <input type="text" class="form-control form-control-lg p-3" name="state" id="inputState" placeholder="Enter your state">
                                                            <div id="stateError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mb-3">
                                                            <label for="inputZip" class="form-label">Pin Code</label>
                                                            <input type="number" class="form-control form-control-lg p-3" name="pincode" id="inputZip" placeholder="Enter your pin code">
                                                            <div id="pinCodeError" class="text-danger"></div>
                                                        </div>
                                                        <div class="form-group mt-4">
                                                            <button type="submit" class="btn btn-fill-out btn-block btn-lg font-weight-bold">Save Address</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>



                                    <% if(wallet){ %>
                                        <div class="tab-pane fade" id="wallet" role="tabpanel" aria-labelledby="wallet-tab" style="padding: 20px;
                                        width: 130%; display: grid; grid-template-columns: 1fr 2fr;">

                                            <div class="card coupon-container" style="border-radius: 15px; box-shadow: 0 4px 8px rgba(32, 27, 186, 0.1); width: 200px;">
                                                <div class="card-header bg-gradient-primary text-white" style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
                                                    <h5 style="margin-bottom: 0; color: #2012ba; font-size: 24px;">Wallet</h5>
                                                </div>
                                                <div class="card-body" style="max-width: 300px;"> <!-- Adjust the max-width -->
                                                    <div class="wallet-info" style="padding-bottom: 15px;">
                                                        <h6 style="margin-bottom: 0; font-size: 18px;">Available Balance:</h6>
                                                        <p id="balanceAmount" style="margin-top: 5px; font-size: 24px; font-weight: bold;">Rs.<%= wallet.balance.toFixed(2) %></p>
                                                    </div>
                                                    <!-- Add Funds Form -->
                                                    <div class="add-funds-form" style="margin-top: 20px;">
                                                        <form id="addFundsForm" method="post">
                                                            <div class="form-group">
                                                                <label for="amount" style="margin-bottom: 5px; font-size: 18px;">Amount:</label>
                                                                <input type="number" class="form-control" id="amountInput" name="amount" style="border-radius: 20px; font-size: 16px; padding: 10px; border: 1px solid #ced4da;" placeholder="Enter amount">
                                                            </div>
                                                            <button style="background-color: #2012ba;" type="button" onclick="submitForm()" class="btn btn-primary" style="border-radius: 20px; padding: 10px 30px; font-size: 18px;">Add me</button>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                            <%}%>
                                            <% if (wallet) { %>
                                                <div class="transaction-history" style="max-height: 400px; overflow-y: auto;">
                                                    <h2 style="position: sticky; top: 0; background-color: #ffffff; z-index: 1; color: #3517db; 
                                                    font-size: 24px; font-weight: bold; text-align: center; text-transform: uppercase; margin-bottom: 20px;">
                                                    Transaction History</h2>
                                                    
                                                    
                                                        <table style="width: 100%; height: 400px; border-collapse: collapse;">
                                                        <thead>
                                                            <tr>
                                                                <th>Transaction ID</th>
                                                                <th>Date</th>
                                                                <th>Amount</th>
                                                                <th>Status</th>
                                                            </tr>
                                                        </thead>
                                                        
                                                        <tbody>
                                                            <% if (wallet.transactionHistory && wallet.transactionHistory.length > 0) { %>
                                                                <% for (let i = wallet.transactionHistory.length - 1; i >= 0; i--) { %>
                                                                    <tr>
                                                                        <td>#<%= Math.random().toString(36).substr(2, 8).toUpperCase() %></td>
                                                                        <td><%= wallet.transactionHistory[i].date.toLocaleString() %></td>
                                                                        <td class="<%= wallet.transactionHistory[i].type === 'Credit' ? 'Credit' : 'Debit' %>">
                                                                            <%= wallet.transactionHistory[i].type === 'Credit' ? '+ Rs.' : '- Rs.' %><%= wallet.transactionHistory[i].amount %>
                                                                        </td>
                                                                        <td><%= wallet.transactionHistory[i].type %></td> <!-- Added status column -->
                                                                    </tr>
                                                                <% } %>
                                                            <% } else { %>
                                                                <tr>
                                                                    <td colspan="4">No transactions found</td> <!-- Adjusted colspan to 4 -->
                                                                </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                    
                                                </div>
                                                
                                            <% } %>
                                        </div>

                                            <div class="tab-pane fade" id="changePassword" role="tabpanel" aria-labelledby="account-detail-tab">
                                                <div class="card">
                                                    <div class="card-header">
                                                        <h5>Account Details</h5>
                                                    </div>
                                                    <div class="card-body">
                                                        <form method="post" name="enq">
                                                            <div class="row">
                                                                <div class="form-group col-md-12">
                                                                    <label>Display Name <span class="required">*</span></label>
                                                                    <input class="form-control" name="name" type="text">
                                                                </div>
                                                                <div class="form-group col-md-12">
                                                                    <label>Email Address <span class="required">*</span></label>
                                                                    <input class="form-control" name="email" type="email">
                                                                </div>
                                                                <div class="form-group col-md-12">
                                                                    <label>Current Password <span class="required">*</span></label>
                                                                    <input class="form-control" name="current-pwd" type="password">
                                                                </div>
                                                                <div class="form-group col-md-12">
                                                                    <label>New Password <span class="required">*</span></label>
                                                                    <input class="form-control" name="new-pwd" type="password">
                                                                </div>
                                                                <div class="form-group col-md-12">
                                                                    <label>Confirm Password <span class="required">*</span></label>
                                                                    <input class="form-control" name="confirm-pwd" type="password">
                                                                </div>
                                                                <div class="col-md-12">
                                                                    <button type="submit" class="btn btn-fill-out submit font-weight-bold" name="submit">Save</button>
                                                                </div>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                            </div>
                        </div>
                    <!-- </div> -->
                </div>
            </div>

            <div class="pagination-area mt-30 mb-50">
                <nav aria-label="Order Pagination">
                    <ul class="pagination">
                      <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= currentPage == i ? 'active' : '' %>">
                          <a href="#" class="page-link pagination-link" data-page="<%= i %>"><%= i %></a>
                        </li>
                      <% } %>
                    </ul>
                  </nav>
              </div>
        </section>
    </main>


    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>



    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const addressForm = document.getElementById("addressForm");
    
        if (addressForm) {
            addressForm.addEventListener("submit", function (event) {
                event.preventDefault(); // Prevent form submission
    
                // Clear previous error messages
                const nameError = document.getElementById("nameError");
                const mobileError = document.getElementById("mobileError");
                const houseNameError = document.getElementById("houseNameError");
                const cityError = document.getElementById("cityError");
                const stateError = document.getElementById("stateError");
                const pincodeError = document.getElementById("pincodeError");
    
                if (nameError) nameError.textContent = "";
                if (mobileError) mobileError.textContent = "";
                if (houseNameError) houseNameError.textContent = "";
                if (cityError) cityError.textContent = "";
                if (stateError) stateError.textContent = "";
                if (pincodeError) pincodeError.textContent = "";
    
                let isValid = true;
    
                // Validate Name field to disallow spaces or numbers
                const nameInput = document.getElementById("inputName"); // Corrected from "inputAddress" to "inputName"
                if (/[\s\d]/.test(nameInput.value)) {
                    if (nameError) nameError.textContent = "Name should not contain spaces or numbers.";
                    nameInput.focus();
                    isValid = false;
                }
    
                // Validate Mobile field for 10 digits
                const mobileInput = document.getElementById("inputMobile");
                if (!/^\d{10}$/.test(mobileInput.value)) {
                    if (mobileError) mobileError.textContent = "Mobile number must be exactly 10 digits.";
                    mobileInput.focus();
                    isValid = false;
                }
    
                // Validate State and City fields to disallow numbers
                const stateInput = document.getElementById("inputState");
                const cityInput = document.getElementById("inputCity");
    
                if (/\d/.test(stateInput.value) || /\d/.test(cityInput.value)) {
                    if (stateError) stateError.textContent = "State should not contain numbers.";
                    if (cityError) cityError.textContent = "City should not contain numbers.";
                    isValid = false;
                }
    
                // Validate Pin Code to ensure it's a number
                const pincodeInput = document.getElementById("inputZip");
                if (!/^\d{6}$/.test(pincodeInput.value)) {
                    if (pincodeError) pincodeError.textContent = "Pin code must be exactly 6 digits.";
                    pincodeInput.focus();
                    isValid = false;
                }
    
                if (!isValid) {
                    return; // Stop further execution if there are validation errors
                }
    
                // If all validations pass, submit the form using fetch
                const formData = new FormData(addressForm);
                const data = Object.fromEntries(formData.entries());
    
                fetch('/addAddress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Address Saved',
                            text: 'Address saved successfully!',
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            addressForm.reset(); 
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to save the address.'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while saving the address.'
                    });
                    console.error("Error:", error);
                });
            });
        }
    
        const addressFormContainer = document.getElementById("addressFormContainer");
        const toggleAddressForm = document.getElementById("toggleAddressForm");
    
        toggleAddressForm.addEventListener("click", function (event) {
            event.preventDefault();
            if (addressFormContainer.style.display === "none") {
                addressFormContainer.style.display = "block";
                localStorage.setItem("isAddressFormShown", "true");
            } else {
                addressFormContainer.style.display = "none";
                localStorage.removeItem("isAddressFormShown");
            }
        });
    });

   </script>
        
    <script>
        function removeAddress(addressId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You will not be able to recover this address!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/removeAddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ addressId })
            })
            .then(response => {
                if (response.ok) {
                    // Remove the address from the DOM
                    const addressElement = document.getElementById('address_' + addressId);
                    addressElement.parentNode.removeChild(addressElement);
                    Swal.fire(
                        'Deleted!',
                        'Your address has been deleted.',
                        'success'
                    );
                } else {
                    Swal.fire(
                        'Error!',
                        'Failed to remove address.',
                        'error'
                    );
                }
            })
            .catch(error => {
                Swal.fire(
                    'Error!',
                    'Error occurred while removing address.',
                    'error'
                );
            });
        }
    });
}
    </script>

<script>
    document.getElementById('change-password-form').addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    console.log('Form Data:', Array.from(formData.entries()));

    try {
        const response = await fetch(this.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(formData)  // Converts FormData to URL encoded string
        });

        const result = await response.json();

        if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: result.message,
            }).then(() => {
                window.location.href = '/userProfile';
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.message,
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred. Please try again.',
        });
    }
});
</script>

<style>
    .error-message {
      color: rgb(215, 19, 19);
      font-size: 0.9em; 
      margin-top: 5px; 
    }
  </style>

    <!-- edit profile -->
    <script>
        document.getElementById('editProfileButton').addEventListener('click', function() {
            var form = document.getElementById('editProfileForm');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        });
    
        document.getElementById('editProfileForm').addEventListener('submit', function(event) {
            event.preventDefault();
    
            var name = document.getElementById('editName').value.trim();
            var email = document.getElementById('editEmail').value.trim();
            var mobile = document.getElementById('editMobile').value.trim();
            document.getElementById('nameError').textContent = '';
            document.getElementById('emailError').textContent = '';
            document.getElementById('mobileError').textContent = '';

            var nameRegex = /^[A-Za-z\s]{5,}$/; 
    var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; 
    var mobileRegex = /^\d{10}$/; 

    var isValid = true;

    
    if (!nameRegex.test(name)) {
      document.getElementById('nameError').textContent = 'Name should only contain alphabets and be at least 5 characters long.';
      isValid = false; 
    }

    if (!emailRegex.test(email)) {
      document.getElementById('emailError').textContent = 'Please enter a valid email address.';
      isValid = false; 
    }

    if (!mobileRegex.test(mobile)) {
      document.getElementById('mobileError').textContent = 'Please enter a valid 10-digit mobile number.';
      isValid = false; 
    }

    if (!isValid) {
      return; 
    }

    
            fetch('/updateProfile', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name, email, mobile })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
        
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        document.getElementById('editProfileForm').style.display = 'none';
                        location.reload(); 
                    });
                } else {
            
                    Swal.fire({
                        title: 'Error!',
                        text: 'Error updating profile. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error updating profile:', error);
            
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred. Please try again later.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('.pagination-link').forEach(link => {
    link.addEventListener('click', function (event) {
      event.preventDefault();
      
      const page = this.getAttribute('data-page');
      console.log('Clicked page:', page);
      
      fetch(`/userProfile?page=${page}`, {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
        .then(response => response.json())
  
        .then(data => {
    console.log('AJAX Response:', data);

    // Ensure the table body is found and update it
    const ordersTbody = document.getElementById('orders-tbody');
    if (!ordersTbody) {
        console.error('Orders table body not found.');
        return;
    }

    // Construct the HTML for table rows dynamically
    let ordersHtml = '';
    data.orders.forEach(order => {
        const orderStatusBadgeClass = 
            order.orderStatus === 'Cancelled' && order.paymentStatus !== 'Failed'
                ? 'bg-danger'
                : order.orderStatus === 'Order Placed'
                ? 'bg-primary'
                : order.orderStatus === 'Confirmed'
                ? 'bg-warning'
                : order.orderStatus === 'Shipped'
                ? 'bg-info'
                : order.orderStatus === 'Delivered'
                ? 'bg-success'
                : 'bg-secondary';

        const paymentStatusBadgeClass = 
            order.paymentStatus === 'Received'
                ? 'bg-success text-dark'
                : order.paymentStatus === 'Failed'
                ? 'bg-danger text-light'
                : 'bg-warning text-dark';

        ordersHtml += `
            <tr>
                <td style="padding: 10px;">${order.orderId}</td>
                <td style="padding: 10px;">
                    ${new Date(order.orderDate).toLocaleString('en-IN', {
                        timeZone: 'Asia/Kolkata',
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit'
                    })}
                </td>
                <td style="padding: 10px;">
                    <span class="badge ${orderStatusBadgeClass}">
                        ${order.orderStatus}
                    </span>
                </td>
                <td style="padding: 10px;">
                    <span class="badge ${paymentStatusBadgeClass}">
                        ${order.paymentStatus}
                    </span>
                </td>
                <td style="padding: 10px;">${order.totalAmount}</td>
                <td style="padding: 10px;">
                    ${
                        order.paymentStatus === 'Pending' && order.paymentMethod === 'Razorpay'
                            ? '<a href="" class="text-danger">Pay</a>'
                            : `<a href="/orderDetailPage?id=${order._id}">View Order</a>`
                    }
                </td>
            </tr>`;
    });

    // Update the table body with the generated HTML
    ordersTbody.innerHTML = ordersHtml;
})

        .catch(error => console.error('Error:', error));
    });
  });
});
    </script>


    <script>
    function submitForm() {

        const amount = document.getElementById('amountInput').value;
        const data = {
            amount: amount };
        // Fetch request
        fetch('/addTowallet', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then((response) => response.json())
        .then(data => {
            
            const options = {
                "key": 'rzp_test_bdVGrcCwlFiIwl', // Replace with your Razorpay key ID
                "amount": data.order.amount/100, // Use the amount from server response
                "currency": 'INR', // Change the currency to match your requirements
                "name": 'Sports ZONE',
                "description": 'Purchase Description',
                "order_id": data.order.id, // Use the order ID from server response
                "handler": function (response) {
                    Swal.fire({
                        position: "center",
                        icon: "success",
                        title: "Payment successful!",
                        showConfirmButton: false,
                        timer: 2000
                    }).then(() => {
                        window.location.href = '/userProfile';
                    });
                },
                "theme": {
                    "color": '#FFC0CB'
                }
            };
            const razorpayInstance = new Razorpay(options);
            razorpayInstance.open();
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Something went wrong!",
            });
        });
    }


    </script>

    <script>
       function retryPayement(id) {
    fetch(`/retryPayment/${id}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
    })
    .then(response => response.json())
    .then(data => {
        console.log('9999999-->', data);
        if (data.success) {

                                                    const options = {
                                                    "key": '<%= process.env.RAZORPAY_ID_KEY %>', 
                                                    "amount": data.razorpayOrder, 
                                                    "currency": "INR",
                                                    "name": "Sports Zone",
                                                    "description": "Order Payment",
                                                    "order_id": data.razorpayOrder.id, 
                                                    "handler": function (response) {
                                                        // if(response.)
                                                        console.log('ooooi', response);
                                                        fetch('/verifyPayment', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        razorpayOrderId: data.razorpayOrder.id, 
                                        amount: data.razorpayOrder.amount / 100,
                                        orderId: data.orderId
                                    })
                                })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.message === 'Payment verified and order updated successfully') {
                                        Swal.fire({
                                            position: "center",
                                            icon: "success",
                                            title: "Payment successful!",
                                            showConfirmButton: false,
                                            timer: 2000
                                        }).then(() => {
                                            window.location.href = `/loadOrderPage?id=${data.order._id}`;
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Payment verification failed",
                                            text: data.message
                                        });
                                    }
                                })
                                .catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Error",
                                        text: "Something went wrong during payment verification."
                                    });
                                });

                                                    },
                                                    "theme": {
                                                        "color": "#90EE90"
                                                    }
                                                };
                                                
                const rzp = new Razorpay(options);
                rzp.on('payment.failed', function (response) {
                  fetch('/failedOrder', {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    // body: JSON.stringify({ selectedAddress, couponId }),
                  });
                // alert('')
                window.location.href = '/userProfile';
                });
                rzp.open();
        } else {
            Swal.fire({
                title: 'Payment Failed!',
                text: data.message || 'There was an issue processing your payment. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    })
    .catch(error => {
        console.error('Error processing payment:', error);

        Swal.fire({
            title: 'Unexpected Error!',
            text: 'An unexpected error occurred while processing your payment. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    });
}

    </script>



      
    <%- include('../layouts/userFooter.ejs') -%>


    <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="text-center">
                    <h5 class="mb-5">Now Loading</h5>
                    <div class="loader">
                        <div class="bar bar1"></div>
                        <div class="bar bar2"></div>
                        <div class="bar bar3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>


<!-- Toastr JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <!-- Vendor JS-->
    <script src="assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="assets/js/vendor/bootstrap.bundle.min.js"></script>
    <script src="assets/js/plugins/slick.js"></script>
    <script src="assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="assets/js/plugins/wow.js"></script>
    <script src="assets/js/plugins/jquery-ui.js"></script>
    <script src="assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="assets/js/plugins/magnific-popup.js"></script>
    <script src="assets/js/plugins/select2.min.js"></script>
    <script src="assets/js/plugins/waypoints.js"></script>
    <script src="assets/js/plugins/counterup.js"></script>
    <script src="assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="assets/js/plugins/images-loaded.js"></script>
    <script src="assets/js/plugins/isotope.js"></script>
    <script src="assets/js/plugins/scrollup.js"></script>
    <script src="assets/js/plugins/jquery.vticker-min.js"></script>
    <script src="assets/js/plugins/jquery.theia.sticky.js"></script>
    <!-- Template  JS -->
    <script src="assets/js/maind134.js?v=3.4"></script>
</body>


<!-- Mirrored from wp.alithemes.com/html/evara/evara-frontend/page-account.html by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 15 Jul 2023 10:11:15 GMT -->
</html>