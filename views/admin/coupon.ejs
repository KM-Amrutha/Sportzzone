<%- include('../layouts/adminHeader.ejs') -%>
<style>

    .premium-table {
        width: 100%;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1);
    }
    
    .premium-table th,
    .premium-table td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #f0f0f0;
    }
    
    .premium-table th {
        background-color: #3f51b5; /* Header background color */
        color: #fff; /* Header text color */
        font-weight: bold;
    }
    
    .premium-table tbody tr:nth-child(even) {
        background-color: #f5f5f5; /* Alternate row background color */
    }
    
    .premium-table tbody tr:hover {
        background-color: #e0e0e0; /* Hover row background color */
    }
    
    .premium-table td:last-child {
        text-align: right; /* Align action column to the right */
    }
    
    /* Button style for action column */
    .premium-table .btn {
        padding: 6px 12px;
        border-radius: 5px;
        background-color: #4caf50; /* Button background color */
        color: #fff; /* Button text color */
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    
    .premium-table .btn:hover {
        background-color: #388e3c; /* Hover background color */
    }
    .badge.alert-success {
            background-color: #174f30; /* Emerald Green */
            color: #fff;
        }
    
        .badge.alert-danger {
            background-color: #ca2929; /* Alizarin Red */
            color: #fff;
        }
        .premium-button {
        display: inline-block;
        padding: 8px 16px;
        border-radius: 5px;
        background-color: #3f51b5; /* Violet button background color */
        color: #fff; /* Button text color */
        text-decoration: none; /* Remove underline */
        transition: background-color 0.3s ease;
    }
    
    .premium-button:hover {
        background-color:#5f6cb9; /* Hover background color */
    }
    
    /* Premium Level Form Styles */
    #couponForm {
        margin-bottom: 30px;
    }
    
    .form-label {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }
    
    .form-control {
        border: 1px solid #ced4da;
        border-radius: 4px;
        padding: 10px;
        font-size: 16px;
    }
    
    .form-group {
        margin-bottom: 20px;
    }
    
    .error-message {
        font-size: 14px;
        color: red;
    }
    
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        color: #fff;
        font-size: 16px;
        padding: 10px 20px;
    }
    
    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
    }
    
    /* Premium Level Table Styles */
    .premium-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .premium-table th,
    .premium-table td {
        padding: 12px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    
    .premium-table th {
        font-size: 14px;
        font-weight: 600;
        color: #333;
        background-color: #f8f9fa;
    }
    
    .premium-table tbody tr:hover {
        background-color: #f0f0f0;
    }
    .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.pagination a {
    margin: 0 5px;
    padding: 8px 12px;
    border: 1px solid #007bff;
    color: #007bff;
    text-decoration: none;
}

.pagination a.active {
    background-color: #007bff;
    color: white;
}

.pagination a:hover {
    background-color: #e7f1ff;
}
    </style>




<section class="content-main">
  <div class="content-header">
      <div>
          <h2 class="content-title card-title">Coupons</h2>
          <p>Create Coupons</p>
      </div>  
  </div>

  <div class="card">
      <div class="card-body">
          <div class="row">
              <!-- Form Section -->
              <div class="col-md-4">
                  <div class="container">

                    
                     
                      <% if (error) { %>
                          <div id="errorMessage" class="alert alert-danger">
                              <%= error %>
                          </div>
                      <% } %>
                    
                        
                        <% if (typeof success !== 'undefined' && success) { %>
                            toastr.success('<%= message %>');
                        <% } %>

                      <!-- Form for adding coupon -->
                      <form id="addCouponForm" method="POST" action="/admin/addCoupon">
                          <div class="form-group">
                              <label for="couponName" class="form-label">Coupon Name</label>
                              <input type="text" placeholder="Enter coupon name" name="couponName" id="couponName" class="form-control" required>
                              <small id="couponNameError" class="error-message"></small>
                          </div>

                          <div class="form-group">
                              <label for="couponCode" class="form-label">Coupon Code</label>
                              <input type="text" placeholder="Enter coupon code" name="couponCode" id="couponCode" class="form-control" required>
                              <small id="couponCodeError" class="error-message"></small>
                          </div>

                          <div class="form-group">
                              <label for="discountAmount" class="form-label">Discount Amount</label>
                              <input type="number" min="0" placeholder="Enter discount amount" name="discountAmount" id="discountAmount" class="form-control" required>
                              <small id="discountError" class="error-message"></small>
                          </div>

                          <div class="form-group">
                              <label for="minimumPurchase" class="form-label">Minimum Purchase Amount</label>
                              <input type="number" min="0" placeholder="Enter minimum purchase amount" name="minimumPurchase" id="minimumPurchase" class="form-control" required>
                              <small id="minAmountError" class="error-message"></small>
                          </div>

                          <div class="form-group">
                              <label for="expirationDate" class="form-label">Valid until</label>
                              <input type="date" id="expirationDate" name="expirationDate" class="form-control" required>
                              <small id="validUntilError" class="error-message"></small>
                          </div>

                          <div class="form-group">
                              <button type="submit" style="background-color: #168f01" class="btn btn-primary">Create Coupon</button>
                          </div>
                      </form>
                  </div>
              </div>

              <!-- Table Section -->
              <div class="col-md-8">
                  <div class="table-responsive">
                      <% if (couponData && couponData.length > 0) { %>
                          <table class="table table-hover premium-table">
                              <thead>
                                  <tr>
                                      <th>No.</th>
                                      <th>Name</th>
                                      <th>Code</th>
                                      <th>Min Purchase</th>
                                      <th>Discount</th>
                                      <th>Validty</th>
                                      <th>Status</th>
                                      <th class="text-end">Action</th>
                                      <th>Remove</th>
                                  </tr>
                              </thead>
                              <tbody>
                                  <% for (let i = 0; i < couponData.length; i++) { %>
                                      <tr>
                                        <td><%= (currentPage - 1) * limit + i + 1 %></td>
                                          <td><b><%= couponData[i].couponName %></b></td>
                                          <td><b><%= couponData[i].couponCode %></b></td>
                                          <td><b>Rs. <%= couponData[i].minimumPurchase %></b></td>
                                          <td><b><%= couponData[i].discountAmount %></b></td>
                                          <td><b><%= new Date(couponData[i].expirationDate).toLocaleDateString('en-GB') %></b></td>

                                          <td>
                                              <% if (couponData[i].is_Active) { %>
                                                  <span class="badge rounded-pill alert-success">Active</span>
                                              <% } else { %>
                                                  <span class="badge rounded-pill alert-danger">Blocked</span>
                                              <% } %>
                                          </td>
                                          <td>
                                              <% if (couponData[i].is_Active) { %>
                                                  <a href="#" class="btn btn-sm font-sm btn-light rounded block-btn"
                                                      data-couid="<%= couponData[i]._id %>"
                                                      style="background-color: rgb(255, 0, 0); transition: background-color 0.3s;">
                                                      <b>Block</b>
                                                  </a>
                                              <% } else { %>
                                                  <a href="#" class="btn btn-sm font-sm btn-light rounded unblock-btn"
                                                      data-couid="<%= couponData[i]._id %>"
                                                      style="background-color: #168f01; transition: background-color 0.3s;">
                                                      Unblock
                                                  </a>
                                              <% } %>
                                          </td>
                                          <td>
                                              <a href="#" class="btn btn-sm font-sm btn-light delete-coupon-btn"
                                                  data-couid="<%= couponData[i]._id %>"
                                                  style="background-color: rgb(255, 0, 0); transition: background-color 0.3s;"
                                                  onclick="deleteCoupon('<%= couponData[i]._id %>')">
                                                  <i class="material-icons md-delete_forever"></i>
                                                  <!-- <b>Delete</b> -->
                                              </a>
                                          </td>
                                      </tr>
                                  <% } %>
                              </tbody>
                          </table>
                      <% } else { %>
                          <p>No coupons found.</p>
                      <% } %>
                  </div>
              </div>
          </div>
      </div>
  </div>

  <!-- pagination -->
  <div class="pagination-area mt-30 mb-50">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-start">
            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="/admin/loadCoupon?page=<%= i %>"><%= i %></a>
                </li>
            <% } %>
        </ul>
    </nav>
</div>
</section>


<%- include('../layouts/adminFooter.ejs') -%>
</main>



<!-- Bootstrap JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Include Axios library for making HTTP requests -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script src="/admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/admin-assets/js/vendors/select2.min.js"></script>
<script src="/admin-assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
<!-- Main Script -->
<script src="/admin-assets/js/main.js" type="text/javascript"></script>

<!-- Include Toastr JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>





<script>
  document.getElementById('addCouponForm').addEventListener('submit', function(event) {
    event.preventDefault(); 

    const formData = new FormData(this);
    const formObject = {};

    // Convert FormData to a JSON object
    formData.forEach((value, key) => {
      formObject[key] = value;
    });

    console.log("Form data before sending:", formObject);

    fetch('/admin/addCoupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'  // Specify JSON format
        },
        body: JSON.stringify(formObject)  // Send as JSON
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire('Success!', data.message, 'success').then(() => {
                location.reload(); // Reload the page to reflect the new coupon
            });
        } else {
            Swal.fire('Error!', data.error || 'Failed to add coupon.', 'error');
        }
    })
    .catch(error => {
        Swal.fire('Error!', 'Something went wrong!', 'error');
    });
});
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
  const blockButtons = document.querySelectorAll('.block-btn');
  const unblockButtons = document.querySelectorAll('.unblock-btn');

  blockButtons.forEach(button => {
    button.addEventListener('click', function (event) {
      event.preventDefault();
      const couponId = this.getAttribute('data-couid');
      Swal.fire({
        title: 'Are you sure?',
        text: "You are about to block this coupon!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#00d9ff',
        cancelButtonColor: '#888',
        confirmButtonText: 'Yes, block it!',
        cancelButtonText: 'No, keep it'
      }).then((result) => {
        if (result.isConfirmed) {
          // Send an AJAX request to block the coupon
          fetch(`/admin/blockCoupon?Couid=${couponId}`, {
            method: 'GET',
          })
          .then(response => {
            if (response.ok) {
              Swal.fire('Blocked!', 'Coupon has been blocked.', 'success');
              // Optionally, update the coupon status in the DOM
              const statusBadge = button.closest('tr').querySelector('.badge');
              statusBadge.classList.remove('alert-success');
              statusBadge.classList.add('alert-danger');
              statusBadge.textContent = 'Blocked';
              // Change button to "Unblock"
              button.textContent = 'Unblock';
              button.classList.remove('block-btn');
              button.classList.add('unblock-btn');
              button.style.backgroundColor = '#088178'; // Change button style
            } else {
              Swal.fire('Error!', 'Failed to block coupon.', 'error');
            }
          })
          .catch(err => {
            Swal.fire('Error!', 'There was a problem with the request.', 'error');
          });
        }
      });
    });
  });

  unblockButtons.forEach(button => {
    button.addEventListener('click', function (event) {
      event.preventDefault();
      const couponId = this.getAttribute('data-couid');
      Swal.fire({
        title: 'Are you sure?',
        text: "You are about to unblock this coupon!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#00d9ff',
        cancelButtonColor: '#888',
        confirmButtonText: 'Yes, unblock it!',
        cancelButtonText: 'No, keep it'
      }).then((result) => {
        if (result.isConfirmed) {
          // Send an AJAX request to unblock the coupon
          fetch(`/admin/blockCoupon?Couid=${couponId}`, {
            method: 'GET',
          })
          .then(response => {
            if (response.ok) {
              Swal.fire('Unblocked!', 'Coupon has been unblocked.', 'success');
              // Optionally, update the coupon status in the DOM
              const statusBadge = button.closest('tr').querySelector('.badge');
              statusBadge.classList.remove('alert-danger');
              statusBadge.classList.add('alert-success');
              statusBadge.textContent = 'Active';
              // Change button to "Block"
              button.textContent = 'Block';
              button.classList.remove('unblock-btn');
              button.classList.add('block-btn');
              button.style.backgroundColor = 'rgb(255, 0, 0)'; // Change button style
            } else {
              Swal.fire('Error!', 'Failed to unblock coupon.', 'error');
            }
          })
          .catch(err => {
            Swal.fire('Error!', 'There was a problem with the request.', 'error');
          });
        }
      });
    });
  });
});

</script>

<script>
  // Wait until the DOM is fully loaded
  document.addEventListener('DOMContentLoaded', function () {
    const errorMessage = document.getElementById('errorMessage');

    if (errorMessage) {
      // Set a timeout to hide the message after 3 seconds (3000 milliseconds)
      setTimeout(function () {
        errorMessage.style.display = 'none';
      }, 3000);
    }
  });
</script>



<% if(locals.couponExists) { %>
    <script>
      Swal.fire({
        icon: 'warning',
        title: 'Coupon Already Exists!',
        text: 'Please choose a different coupon name or code.',
        iconColor: '#ff4757', // Vibrant red color for the warning icon
        background: 'linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%)', // Gradient background
        color: '#2f3542', // Darker text color for better contrast
        width: '600px', // Adjusted size for the modal
        padding: '3rem', // More padding for better spacing
        showConfirmButton: true,
        confirmButtonText: 'Try Again',
        confirmButtonColor: '#3742fa', // Bright blue confirm button
        showClass: {
          popup: 'animate__animated animate__bounceIn', // Bounce animation on show
        },
        hideClass: {
          popup: 'animate__animated animate__bounceOut', // Bounce animation on hide
        },
        backdrop: `
          rgba(0, 0, 0, 0.7)
          url("https://media.giphy.com/media/d2lcHJTG5Tscg/giphy.gif")  // Funny GIF as backdrop
          center left
          no-repeat
        `,
        customClass: {
          popup: 'custom-swal-popup premium-modal',  // Custom popup class for additional styling
          confirmButton: 'custom-confirm-btn',       // Custom confirm button class
        }
      });
    </script>
  <% } %>



  
   <!--detletecoupon -->

   <script>
    function deleteCoupon(couponId) {
      const url = `/admin/deleteCoupon`;
      fetch(url, {
        method: 'POST',  // Make sure you use POST
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ id: couponId })  // Send the couponId in the body
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          toastr.success(data.message);
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        } else {
          toastr.error(data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        toastr.error('An error occurred while deleting the coupon.');
      });
    }
  </script>

<!-- validateCoupon -->


<script>
// Prevent spaces in coupon code input
const couponCodeInput = document.getElementById('couponCode');
couponCodeInput.addEventListener('input', () => {
couponCodeInput.value = couponCodeInput.value.replace(/\s/g, '');
});

// Prevent spaces in coupon name input
const couponNameInput = document.getElementById('couponName');
couponNameInput.addEventListener('input', () => {
couponNameInput.value = couponNameInput.value.replace(/\s/g, '');
});
</script>



</body>

<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-products-list.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:12 GMT -->
</html>