function deleteImage(event) {
  const imageContainer = event.target.parentNode;
  imageContainer.remove(); // Remove the image container from the DOM
}

function validateAndPreviewImages(event) {
  const previewContainer = document.getElementById('image-preview-container');
  const imageError = document.getElementById('image-error');
  previewContainer.innerHTML = ''; // Clear previous previews
  imageError.innerHTML = ''; // Clear previous error messages

  const files = event.target.files;
  const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/jpg', 'image/webp'];
  const maxSize = 5 * 1024 * 1024; // 5MB

  if (files.length < 1 || files.length > 4) {
      imageError.innerHTML = 'Please upload between 1 to 4 images.';
      event.target.value = ''; // Clear the file input
      return;
  }

  for (let i = 0; i < files.length; i++) {
      const file = files[i];
      if (!allowedTypes.includes(file.type)) {
          imageError.innerHTML = 'Please select a valid image file (JPEG, JPG, PNG, WEBP, or GIF).';
          event.target.value = ''; // Clear the file input
          return;
      }
      if (file.size > maxSize) {
          imageError.innerHTML = 'File size exceeds the limit (5MB).';
          event.target.value = ''; // Clear the file input
          return;
      }

      const reader = new FileReader();
      reader.onload = function (e) {
          const imageItem = document.createElement('div');
          imageItem.classList.add('image-item');

          const image = new Image();
          image.src = e.target.result;
          image.classList.add('img-thumbnail');

          const deleteButton = document.createElement('button');
          deleteButton.classList.add('btn', 'btn-danger', 'delete-btn');
          deleteButton.innerHTML = '&times;';
          deleteButton.onclick = function () {
              previewContainer.removeChild(imageItem);
              // Update input files
              const dataTransfer = new DataTransfer();
              for (let j = 0; j < files.length; j++) {
                  if (j !== i) {
                      dataTransfer.items.add(files[j]);
                  }
              }
              event.target.files = dataTransfer.files;
              event.target.dispatchEvent(new Event('change'));
          };

          imageItem.appendChild(image);
          imageItem.appendChild(deleteButton);
          previewContainer.appendChild(imageItem);
      };
      reader.readAsDataURL(file);
  }
}

function validateForm() {
  let pname = document.getElementById("productName").value;
  let pdescription = document.getElementById("productDescription").value;
  let price = document.getElementById("productPrice").value;
  let stock = document.getElementById("countStock").value;

  let pnamePattern = /^[a-zA-Z0-9]+(?: [a-zA-Z0-9]+)*$/;
  let pricePattern = /^\d+(\.\d{1,2})?$/;
  let stockPattern = /^[1-9]\d*$/;

  if (!pnamePattern.test(pname)) {
      document.getElementById("pname_error").innerHTML = "Product name must contain only letters and numbers.";
      return false;
  } else {
      document.getElementById("pname_error").innerHTML = "";
  }

  if (pdescription.trim() === "") {
      document.getElementById("pdescription_error").innerHTML = "Description cannot be empty.";
      return false;
  } else {
      document.getElementById("pdescription_error").innerHTML = "";
  }

  if (!pricePattern.test(price)) {
      document.getElementById("mrp_error").innerHTML = "Price must be a valid number.";
      return false;
  } else {
      document.getElementById("mrp_error").innerHTML = "";
  }

  if (!stockPattern.test(stock)) {
      document.getElementById("mrp_error").innerHTML = "Stock count must be a positive integer.";
      return false;
  } else {
      document.getElementById("mrp_error").innerHTML = "";
  }

  return true;
}